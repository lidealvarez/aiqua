name: Python application

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]
jobs:
  test-and-report:
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
    - name: Checkout to runner
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mysql-connector-python Flask pandas numpy tensorflow scikit-learn plotly pytest apscheduler coverage
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistic

    - name: Run tests with coverage
      run: |
        coverage run -m unittest discover -s src/aiqua/tests

    - name: Generate coverage report
      run: |
        coverage xml -o src/aiqua/tests/coverage.xml # Output the report to the expected directory
        
    - name: Analyze with SonarQube
      uses: sonarsource/sonarqube-scan-action@master
      with:
        args: >
          -Dsonar.projectKey=<aiqua>
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          -Dsonar.python.coverage.reportPaths=src/aiqua/tests/coverage.xml
          # Add other necessary sonar properties here
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

